set cut_paste_input [stack 0]
version 10.0 v4
push $cut_paste_input
add_layer {P P.X P.Y P.Z P.red P.green P.blue}
Group {
 name PositionKeyer1
 tile_color 0xff00ff
 label "输入通道: \[value in]\n"
 note_font 微软雅黑
 selected true
 xpos -84
 ypos -147
 addUserKnob {20 tab_positionkeyer l PositionKeyer_v0.9}
 addUserKnob {41 in l "Position Layer" T Shuffle2.in}
 addUserKnob {6 preview l preview(预览) +STARTLINE}
 addUserKnob {26 sample_point l 取样位置}
 addUserKnob {12 p0}
 p0 {576 234}
 addUserKnob {12 p1}
 p1 {1148 586}
 addUserKnob {26 div_base l Base(基本设置)}
 addUserKnob {22 bt_rotation_0 l 0 -STARTLINE T "nuke.thisNode()\['x'].setValue(True)\nnuke.thisNode()\['y'].setValue(False)\nnuke.thisNode()\['rotation'].setValue(0)\n\nnuke.thisNode()\['bt_apply'].execute()"}
 addUserKnob {22 bt_rotation_90 l 90 -STARTLINE T "nuke.thisNode()\['x'].setValue(True)\nnuke.thisNode()\['y'].setValue(False)\nnuke.thisNode()\['rotation'].setValue(90)\n\nnuke.thisNode()\['bt_apply'].execute()"}
 addUserKnob {22 bt_y l Y -STARTLINE T "nuke.thisNode()\['x'].setValue(False)\nnuke.thisNode()\['y'].setValue(True)\n\nnuke.thisNode()\['bt_apply'].execute()"}
 addUserKnob {26 div_detail l Detail(详细设置)}
 addUserKnob {6 x +STARTLINE}
 x true
 addUserKnob {6 invert_x l invert(反转) -STARTLINE}
 addUserKnob {6 y +STARTLINE}
 addUserKnob {6 invert_y l invert(反转) -STARTLINE}
 addUserKnob {7 rotation l rotation(旋转) R 0 180}
 addUserKnob {22 bt_apply l INVISIBLE +INVISIBLE T "def refreshRotation():\n    p0 = nuke.thisNode()\['p0'].value()\n    p1 = nuke.thisNode()\['p1'].value()\n\n    sampler = nuke.thisNode().node('Sampler')\n\n    blackpoint = (sampler.sample('rgba.red', p0\[0],  p0\[1]), sampler.sample('rgba.green', p0\[0],  p0\[1]), sampler.sample('rgba.blue', p0\[0],  p0\[1]))\n    whitepoint = (sampler.sample('rgba.red', p1\[0],  p1\[1]), sampler.sample('rgba.green', p1\[0],  p1\[1]), sampler.sample('rgba.blue', p1\[0],  p1\[1]))\n\n    sampler\['p0'].setValue(blackpoint)\n    sampler\['p1'].setValue(whitepoint)\n\nnuke.callbacks.addKnobChanged(refreshRotation, node=nuke.thisNode())" +STARTLINE}
 addUserKnob {26 result l Result}
 addUserKnob {41 p0_1 l "point 0" T Sampler.p0}
 addUserKnob {41 p1_1 l "point 1" T Sampler.p1}
}
 Input {
  inputs 0
  name Input
  gl_color 0x327fff00
  xpos 180
  ypos -1234
 }
set N3d7e800 [stack 0]
 Shuffle {
  in P
  name Shuffle2
  gl_color 0x3282ff00
  xpos 290
  ypos -1208
 }
set N3d7e400 [stack 0]
 NoOp {
  name Sampler
  gl_color 0x32ffc700
  label 取样器
  note_font 微软雅黑
  xpos 290
  ypos -1170
  addUserKnob {20 Result}
  addUserKnob {18 p0 l "point 0"}
  p0 {-22.96875 5.483627319e-006 16.265625}
  addUserKnob {6 p0_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 p1 l "point 1"}
  p1 {67.4375 23.40625 31.421875}
  addUserKnob {6 p1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 BlinkScript {
  recompileCount 21
  ProgramGroup 1
  KernelDescription "2 \"PositionKeyer\" iterate pixelWise 6e90de464584890be55f964a012456f6f54088a206aec83ddc6e5dcd4010eb68 2 \"position\" Read Point \"dst\" Write Point 7 \"invert_x\" Bool 1 AA== \"invert_y\" Bool 1 AA== \"enable_x\" Bool 1 AA== \"enable_y\" Bool 1 AA== \"rotate_y\" Float 1 AAAAAA== \"p0_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"p1_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== 7 \"invert_x\" 1 1 \"invert_y\" 1 1 \"enable_x\" 1 1 \"enable_y\" 1 1 \"rotate_y\" 1 1 \"p0_color\" 4 1 \"p1_color\" 4 1 0"
  kernelSource "// PositionKeyerKernel\n// VERSION: 0.1\nkernel PositionKeyer : ImageComputationKernel<ePixelWise> \{\n  Image<eRead, eAccessPoint, eEdgeClamped> position;\n  Image<eWrite, eAccessPoint> dst;\n\nparam:\n    \n  bool invert_x;\n  bool invert_y;\n  bool enable_x;\n  bool enable_y;\n  float rotate_y;\n  float4 p0_color;\n  float4 p1_color;\n\n  void process() \{\n    const float x = position()\[0];\n    const float y = position()\[1];\n    const float z = position()\[2];\n    \n    float rotated_x = cos(rotate_y) * x - sin(rotate_y) * z;\n    float rotated_z = cos(rotate_y) * z + sin(rotate_y) * x;\n    \n    float4 result;\n    result\[0] = (rotated_x - p0_color\[0]) / p1_color\[0];\n    result\[1] = (y - p0_color\[1]) / p1_color\[1];\n    result\[2] = (rotated_z - p0_color\[2]) / p1_color\[2];\n    result = clamp(result, float4(0.0f), float4(1.0f));\n    \n    result\[0] = invert_x ? (1 - result\[0]) : result\[0];\n    result\[1] = invert_y ? (1 - result\[1]) : result\[1];\n    result\[3] = (enable_x ? result\[0] : 1) * (enable_y ? result\[1] : 1);\n    dst() = result;\n  \}\n\};"
  rebuild ""
  PositionKeyer_invert_x {{parent.invert_x}}
  PositionKeyer_invert_y {{parent.invert_y}}
  PositionKeyer_enable_x {{parent.x}}
  PositionKeyer_enable_y {{parent.y}}
  PositionKeyer_rotate_y {{radians(parent.knob.rotation)}}
  PositionKeyer_p0_color {{parent.Sampler.p0} {parent.Sampler.p0} {parent.Sampler.p0} {parent.Sampler.p0}}
  PositionKeyer_p1_color {{parent.Sampler.p1} {parent.Sampler.p1} {parent.Sampler.p1} {parent.Sampler.p1}}
  rebuild_finalise ""
  name BlinkScript1
  gl_color 0x3332ff00
  note_font 微软雅黑
  xpos 290
  ypos -1126
 }
 Dot {
  name Dot1
  gl_color 0x32ff6c00
  note_font 微软雅黑
  xpos 324
  ypos -1082
 }
set N3d7f800 [stack 0]
push $N3d7e400
 Dot {
  name Dot3
  gl_color 0x8cff3200
  note_font 微软雅黑
  xpos 434
  ypos -1170
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  gl_color 0xff326f00
  note_font 微软雅黑
  xpos 400
  ypos -1095
 }
push $N3d7f800
push $N3d7e800
 Dot {
  name Dot2
  gl_color 0xffce3200
  note_font 微软雅黑
  xpos 214
  ypos -1051
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  gl_color 0x32ffb200
  note_font 微软雅黑
  xpos 290
  ypos -1043
 }
 Switch {
  inputs 2
  which {{parent.knob.preview}}
  name Switch1
  gl_color 0x32ffc800
  label "Preview\n预览"
  note_font 微软雅黑
  xpos 400
  ypos -1051
 }
 Output {
  name Output1
  gl_color 0x32ff4100
  note_font 微软雅黑
  xpos 400
  ypos -991
 }
end_group
