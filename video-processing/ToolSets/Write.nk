set cut_paste_input [stack 0]
version 10.0 v4
push $cut_paste_input
Group {
 name _Write
 tile_color 0xbfbf00ff
 label "\[value root.project_directory]/\n\[subst \[python \{nuke.thisNode().node('Write_MOV_1')\['file'].value()\}]]\n\[subst \[python \{nuke.thisNode().node('Write_JPG_1')\['file'].value()\}]]\n\[\n# Keep single instance\nif \{\[value this.name] != \"_Write\"\} \{\n    \[delete this]\n\}\n\n# Set onScriptSave\nknob root.onScriptSave \{\n# Check project setting\nif not nuke.Root()\['project_directory'].value():\n    nuke.message('工程目录未设置');\n# Lock connections\nb = nuke.toNode('_Write');\nif b and b\['isLockOnSave'].value():\n    nuke.Root()\['lock_connections'].setValue(1);\n# Move viewer frame\nif b and b\['is_jump_to_frame'].value():\n    nuke.frame(b\['frame'].value());\n    nuke.Root().setModified(False)\n\}\n\n# Set onScriptClose\nknob root.onScriptClose \{\n# Render single frame\nif not nuke.modified():\n    w = nuke.toNode('_Write.Write_JPG_1');\n    b = nuke.toNode('_Write');\n    if b and b\['isRenderSingleFrame'].value() and w:\n        nuke.root()\['proxy'].setValue(0);\n        w\['disable'].setValue(0);\n        nuke.render(w);\n\}\n]"
 note_font 微软雅黑
 selected true
 xpos 1184
 ypos 1386
 addUserKnob {20 tab1 l Write_v4.36}
 addUserKnob {26 text1 l 保存时}
 addUserKnob {6 isLockOnSave l 锁定节点连接 +STARTLINE}
 isLockOnSave true
 addUserKnob {6 is_jump_to_frame l 跳至单帧的帧 +STARTLINE}
 is_jump_to_frame true
 addUserKnob {26 text2 l 退出时}
 addUserKnob {6 isRenderSingleFrame l 输出单帧 t 默认为中间帧 -STARTLINE}
 isRenderSingleFrame true
 addUserKnob {6 use_custom_frame l 指定帧 -STARTLINE}
 addUserKnob {3 custom_frame l "" -STARTLINE}
 custom_frame 1
 addUserKnob {3 frame l INVISIBLE +INVISIBLE}
 frame {{"\[python -execlocal first,\\ last\\ =\\ nuke.numvalue('root.first_frame'),\\ nuke.numvalue('root.last_frame')\\nmiddle\\ =\\ (first\\ +\\ last)//2\\nthisNode\\ =\\ nuke.thisNode()\\nif\\ thisNode\\\['use_custom_frame'\\].value()\\ :\\n\\ \\ \\ \\ ret\\ =\\ thisNode\\\['custom_frame'\\].value()\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ middle]"}}
 addUserKnob {26 ""}
 addUserKnob {22 bt_render l Render T "nukescripts.showRenderDialog(\[nuke.thisNode()], False)" +STARTLINE}
}
 Read {
  inputs 0
  file "\[value Write_JPG_1.file]"
  first {{parent.Write_JPG_1.last}}
  last {{first}}
  origset true
  version 28
  in_colorspace linear
  out_colorspace linear
  name ReadWrite_JPG_1
  label "输出的单帧\n第 \[value first] 帧"
  xpos 506
  ypos -225
  disable {{"! \[file exists \[value Write_JPG_1.file]]"}}
 }
 Dot {
  name Dot1
  note_font 微软雅黑
  xpos 540
  ypos -68
 }
 Input {
  inputs 0
  name Input
  xpos 396
  ypos -263
 }
 Dot {
  name Dot_Write_2
  note_font 微软雅黑
  xpos 430
  ypos -164
 }
set N8c11c00 [stack 0]
 Switch {
  inputs 2
  which 1
  name Switch1
  label "把输入的单帧加入节点树\n勿开"
  note_font 微软雅黑
  xpos 396
  ypos -89
  disable {{1 x1 0}}
 }
set N5e79c400 [stack 0]
 Output {
  name Output1
  xpos 501
  ypos 50
 }
push $N5e79c400
 Write {
  file "images/\[lindex \[split \[basename \[value root.name]] .] 0].%04d.jpg"
  proxy "images/\[lindex \[split \[basename \[value root.name]] .] 0]_proxy.%04d.jpg"
  file_type jpeg
  _jpeg_quality 1
  render_order 2
  first {{parent.knob.frame}}
  last {{first}}
  use_limit true
  checkHashOnRead false
  version 55
  in_colorspace linear
  out_colorspace linear
  beforeRender "# Turn off RSMB and CameraShake;\nglobal rsmbList;\nrsmbList = \[];\nfor i in nuke.allNodes(group=nuke.Root()):\n    if 'rsmb' in i.Class() or 'CameraShake' in i.Class():\n        if not i\['disable'].value():\n            rsmbList.append(i);\n            i\['disable'].setValue(1);\n            file = nuke.tcl('eval list \{'+nuke.thisNode()\[\"file\"].value()+'\}');\n"
  afterRender "global rsmbList;\nfor i in rsmbList:\n    if 'rsmb' in i.Class() or 'CameraShake' in i.Class():\n        i\['disable'].setValue(0);\nrsmbList = \[];\nnuke.thisNode()\['disable'].setValue(1);"
  name Write_JPG_1
  label "单帧\n会在退出脚本时自动输出"
  xpos 396
  ypos 86
  disable true
  addUserKnob {20 caravr l CaraVR}
  addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
  addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
 }
push $N8c11c00
 Write {
  file "mov/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
  proxy "mov/proxy/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
  colorspace sRGB
  file_type mov
  meta_codec apch
  mov32_codec "rle "
  mov32_pixel_format {{0} "default (RGBA  8-bit)" "RGBA  8-bit"}
  mov64_codec apch
  mov64_fps {{root.fps}}
  mov64_advanced 1
  mov64_bitrate 20000
  mov64_bitrate_tolerance 40000000
  mov64_quality_min 2
  mov64_quality_max 31
  mov64_gop_size 12
  mov64_b_frames 0
  checkHashOnRead false
  version 17
  in_colorspace linear
  out_colorspace linear
  beforeRender "# Create output folder;\ndef mkOutputFolder(knob):\n    if not nuke.Root()\['project_directory'].value():\n        nuke.error('工程目录未设置');\n        nuke.cancel();\n    file = nuke.tcl('eval list \{'+knob.value()+'\}');\n    absolutePath = os.path.splitdrive(file)\[0];\n    project_directory = nuke.tcl('eval list \{'+nuke.root()\[\"project_directory\"].value()+'\}');\n    pathHead = '' if absolutePath else project_directory+'/';\n    target = pathHead+os.path.dirname(file)\n    if os.path.exists(target):\n        pass;\n    else:\n        os.makedirs(target);\n#\nmkOutputFolder(nuke.thisNode()\[\"file\"]);\nmkOutputFolder(nuke.thisNode()\[\"proxy\"]);"
  name Write_MOV_1
  xpos 286
  ypos -157
  addUserKnob {20 caravr l CaraVR}
  addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
  addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  opacity 0.3
  message "\[lindex \[split \[basename \[value root.name]] .] 0]"
  old_message {{97 117 116 111 67 111 109 112 101 114}
    }
  old_expression_markers {{0 9}
    }
  box {20 20 1000 75}
  transforms {{0 2}
    }
  cursor_position 50
  font {{ Microsoft YaHei : Regular : msyh.ttf : 0 }}
  global_font_scale 0.65
  scale {1 1}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{24 122.5}
    }
  group_animations {{0} imported: 0 selected: items: "root transform"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  enable_background {{!root.proxy}}
  background_opacity 0.3
  background_border_x 20
  name Text2_Write_2
  label "镜头名称\n\[knob this.message \{\[lindex \[split \[basename \[value root.name]] .] 0]\}]"
  note_font 微软雅黑
  xpos 286
  ypos -81
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  opacity 0.34
  message "\[x]"
  old_message {{49}
    }
  old_expression_markers {{0 0}
    }
  box {1700 20 1900 75}
  xjustify right
  transforms {{0 2}
    }
  cursor_position 1
  font {{ Microsoft YaHei : Regular : msyh.ttf : 0 }}
  global_font_scale 0.65
  scale {1 1}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{1778.5 128.5}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  enable_background {{!root.proxy}}
  background_opacity 0.3
  background_border_x 20
  name Text2_Write_1
  label "帧编号\n\[knob this.message \{\[x]\}]"
  note_font 微软雅黑
  xpos 286
  ypos -33
 }
 Write {
  file "mov/burn-in/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
  proxy "mov/proxy/burn-in/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
  colorspace sRGB
  file_type mov
  meta_codec apch
  mov32_codec "rle "
  mov32_pixel_format {{0} "default (RGBA  8-bit)" "RGBA  8-bit"}
  mov64_codec apch
  mov64_fps {{root.fps}}
  mov64_advanced 1
  mov64_bitrate 20000
  mov64_bitrate_tolerance 40000000
  mov64_quality_min 2
  mov64_quality_max 31
  mov64_gop_size 12
  mov64_b_frames 0
  render_order 2
  checkHashOnRead false
  version 17
  in_colorspace linear
  out_colorspace linear
  beforeRender "# Create output folder;\ndef mkOutputFolder(knob):\n    if not nuke.Root()\['project_directory'].value():\n        nuke.error('工程目录未设置');\n        nuke.cancel();\n    file = nuke.tcl('eval list \{'+knob.value()+'\}');\n    absolutePath = os.path.splitdrive(file)\[0];\n    project_directory = nuke.tcl('eval list \{'+nuke.root()\[\"project_directory\"].value()+'\}');\n    pathHead = '' if absolutePath else project_directory+'/';\n    target = pathHead+os.path.dirname(file)\n    if os.path.exists(target):\n        pass;\n    else:\n        os.makedirs(target);\n#\nmkOutputFolder(nuke.thisNode()\[\"file\"]);\nmkOutputFolder(nuke.thisNode()\[\"proxy\"]);"
  name Write_MOV_2
  label 带帧编号的MOV
  selected true
  xpos 286
  ypos 29
  addUserKnob {20 caravr l CaraVR}
  addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
  addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
 }
end_group
