set cut_paste_input [stack 0]
version 10.0 v4
BackdropNode {
 inputs 0
 name BackdropNode_Write_1
 tile_color 0x9fbcc6ff
 label "Write v4.1\n"
 note_font_size 42
 selected true
 xpos 1029
 ypos 1365
 bdwidth 365
 bdheight 431
 addUserKnob {20 tab1 l 设置}
 addUserKnob {6 isRenderSingleFrame l 渲染时输出单帧 +STARTLINE}
 isRenderSingleFrame true
 addUserKnob {6 isLockOnSave l 保存时锁定节点连接 +STARTLINE}
 isLockOnSave true
 addUserKnob {26 div1 l 查看器1输入锁定}
 addUserKnob {6 isLock2 l "2 -> 当前输出" -STARTLINE}
 isLock2 true
 addUserKnob {6 isLock3 l "3 -> 饱和度视图" -STARTLINE}
 isLock3 true
 addUserKnob {6 isLock4 l "4 -> 本地单帧" -STARTLINE}
 isLock4 true
 addUserKnob {6 isLock5 l "5 -> 色相视图" -STARTLINE}
 isLock5 true
}
push $cut_paste_input
NoOp {
 name setProject
 label "\[\n#knob root.onScriptLoad \{\n#\}\nknob root.onScriptSave \{\nif not nuke.Root()\['project_directory'].value():\n    nuke.message('工程目录未设置');\nb = nuke.toNode('BackdropNode_Write_1');\nif b and b\['isLockOnSave'].value():\n    nuke.Root()\['lock_connections'].setValue(1);\nif nuke.toNode(\"ReadWrite_JPG_1\"):\n    nuke.frame(nuke.toNode(\"ReadWrite_JPG_1\")\[\"first\"].value());\n    nuke.Root().setModified(False)\n\}\nknob root.onScriptClose \{\nif not nuke.modified():\n    w = nuke.toNode('Write_JPG_1');\n    b = nuke.toNode('BackdropNode_Write_1');\n    if not b or b\['isRenderSingleFrame'].value() and w:\n        nuke.root()\['proxy'].setValue(0);\n        w\['disable'].setValue(0);\n        nuke.render(w);\n\}\nknob root.format  \{1920 1080 0 0 1920 1080 1 HD_1080\}\nknob root.fps 25\n]"
 selected true
 xpos 1170
 ypos 1443
}
Dot {
 name Dot_Write_2
 note_font 微软雅黑
 selected true
 xpos 1204
 ypos 1480
}
set N3662e400 [stack 0]
Write {
 file "mov/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
 proxy "mov/proxy/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
 colorspace sRGB
 file_type mov
 meta_codec apch
 mov32_codec "rle "
 mov32_pixel_format {{0} "default (RGBA  8-bit)" "RGBA  8-bit"}
 mov64_codec apch
 mov64_fps {{root.fps}}
 mov64_advanced 1
 mov64_bitrate 20000
 mov64_bitrate_tolerance 40000000
 mov64_quality_min 2
 mov64_quality_max 31
 mov64_gop_size 12
 mov64_b_frames 0
 checkHashOnRead false
 version 11
 in_colorspace linear
 out_colorspace linear
 beforeRender "# Create output folder;\ndef mkOutputFolder(knob):\n    if not nuke.Root()\['project_directory'].value():\n        nuke.error('工程目录未设置');\n        nuke.cancel();\n    file = nuke.tcl('eval list \{'+knob.value()+'\}');\n    absolutePath = os.path.splitdrive(file)\[0];\n    project_directory = nuke.tcl('eval list \{'+nuke.root()\[\"project_directory\"].value()+'\}');\n    pathHead = '' if absolutePath else project_directory+'/';\n    target = pathHead+os.path.dirname(file)\n    if os.path.exists(target):\n        pass;\n    else:\n        os.makedirs(target);\n#\nmkOutputFolder(nuke.thisNode()\[\"file\"]);\nmkOutputFolder(nuke.thisNode()\[\"proxy\"]);"
 name Write_MOV_1
 selected true
 xpos 1060
 ypos 1511
 addUserKnob {20 caravr l CaraVR}
 addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
 addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
}
Text2 {
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 opacity 0.3
 message "\[lindex \[split \[basename \[value root.name]] .] 0]"
 old_message {{83 78 74 89 87 95 69 80 48 55 95 48 51 95 115 99 49 51 51}
   }
 old_expression_markers {{0 18}
   }
 box {20 20 1000 75}
 transforms {{0 2}
   }
 cursor_position 49
 font {{ Microsoft YaHei : Regular : msyh.ttf : 0 }}
 global_font_scale 0.65
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{24 122.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
   }
 enable_background {{!root.proxy}}
 background_opacity 0.3
 background_border_x 20
 name Text2_Write_2
 note_font 微软雅黑
 selected true
 xpos 1060
 ypos 1595
}
Text2 {
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 opacity 0.34
 message "242424242422\[x]"
 old_message {{50 52 50 52 50 52 50 52 50 52 50 50 55 52}
   }
 old_expression_markers {{12 13}
   }
 box {1700 20 1900 75}
 xjustify right
 transforms {{0 2}
   }
 cursor_position 4
 font {{ Microsoft YaHei : Regular : msyh.ttf : 0 }}
 global_font_scale 0.65
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{1778.5 128.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform/"}
 animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
   }
 enable_background {{!root.proxy}}
 background_opacity 0.3
 background_border_x 20
 name Text2_Write_1
 note_font 微软雅黑
 selected true
 xpos 1060
 ypos 1619
}
Write {
 file "mov/burn-in/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
 proxy "mov/burn-in/proxy/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
 colorspace sRGB
 file_type mov
 meta_codec apch
 mov32_codec "rle "
 mov32_pixel_format {{0} "default (RGBA  8-bit)" "RGBA  8-bit"}
 mov64_codec apch
 mov64_fps {{root.fps}}
 mov64_advanced 1
 mov64_bitrate 20000
 mov64_bitrate_tolerance 40000000
 mov64_quality_min 2
 mov64_quality_max 31
 mov64_gop_size 12
 mov64_b_frames 0
 render_order 2
 checkHashOnRead false
 version 11
 in_colorspace linear
 out_colorspace linear
 beforeRender "# Create output folder;\ndef mkOutputFolder(knob):\n    if not nuke.Root()\['project_directory'].value():\n        nuke.error('工程目录未设置');\n        nuke.cancel();\n    file = nuke.tcl('eval list \{'+knob.value()+'\}');\n    absolutePath = os.path.splitdrive(file)\[0];\n    project_directory = nuke.tcl('eval list \{'+nuke.root()\[\"project_directory\"].value()+'\}');\n    pathHead = '' if absolutePath else project_directory+'/';\n    target = pathHead+os.path.dirname(file)\n    if os.path.exists(target):\n        pass;\n    else:\n        os.makedirs(target);\n#\nmkOutputFolder(nuke.thisNode()\[\"file\"]);\nmkOutputFolder(nuke.thisNode()\[\"proxy\"]);"
 name Write_MOV_2
 selected true
 xpos 1060
 ypos 1655
 addUserKnob {20 caravr l CaraVR}
 addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
 addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
}
push $N3662e400
Write {
 file "images/\[lindex \[split \[basename \[value root.name]] .] 0].%04d.jpg"
 proxy "images/\[lindex \[split \[basename \[value root.name]] .] 0]_proxy.%04d.jpg"
 file_type jpeg
 _jpeg_quality 1
 render_order 2
 first {{root.first_frame+ceil((root.last_frame-root.first_frame)/2)}}
 last {{first}}
 use_limit true
 checkHashOnRead false
 version 55
 beforeRender "# Turn off RSMB and CameraShake;\nglobal rsmbList;\nrsmbList = \[];\nfor i in nuke.allNodes():\n    if 'rsmb' in i.Class() or 'CameraShake' in i.Class():\n        if not i\['disable'].value():\n            rsmbList.append(i);\n            i\['disable'].setValue(1);file = nuke.tcl('eval list \{'+nuke.thisNode()\[\"file\"].value()+'\}');\n# Create output folder;\ndef mkOutputFolder(knob):\n    if not nuke.Root()\['project_directory'].value():\n        nuke.error('工程目录未设置');\n        nuke.cancel();\n    file = nuke.tcl('eval list \{'+knob.value()+'\}');\n    absolutePath = os.path.splitdrive(file)\[0];\n    project_directory = nuke.tcl('eval list \{'+nuke.root()\[\"project_directory\"].value()+'\}');\n    pathHead = '' if absolutePath else project_directory+'/';\n    target = pathHead+os.path.dirname(file)\n    if os.path.exists(target):\n        pass;\n    else:\n        os.makedirs(target);\n#\nmkOutputFolder(nuke.thisNode()\[\"file\"]);\nmkOutputFolder(nuke.thisNode()\[\"proxy\"]);"
 afterRender "global rsmbList;\nprint(rsmbList);\nfor i in rsmbList:\n    if 'rsmb' in i.Class() or 'CameraShake' in i.Class():\n        i\['disable'].setValue(0);\nrsmbList = \[];\nnuke.toNode(\"root\")\[\"lock_connections\"].setValue(1);\nnuke.thisNode()\['disable'].setValue(1);"
 name Write_JPG_1
 label "\[\n# lockViewer\nset isLock2 \"parent.BackdropNode_Write_1.isLock2\"\nif \{(\[exists \$isLock2]) && (\[value \$isLock2]) && (\[exists Viewer1])\} \{\n    input Viewer1 1 this\n\}\n]"
 selected true
 xpos 1170
 ypos 1553
 disable true
 addUserKnob {20 caravr l CaraVR}
 addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
 addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
}
Dot {
 name Dot_Write_1
 selected true
 xpos 1204
 ypos 1624
}
set N368d8400 [stack 0]
Group {
 name HueToRGB_Write_1
 label "\[\n# lockViewer\nset isLock5 \"parent.BackdropNode_Write_1.isLock5\"\nif \{(\[exists \$isLock5]) && (\[value \$isLock5]) && (\[exists Viewer1])\} \{\n    input Viewer1 4 this\n\}\n]"
 selected true
 xpos 1170
 ypos 1716
}
 Input {
  inputs 0
  name Input1
  xpos -78
  ypos -79
 }
 Colorspace {
  colorspace_in sRGB
  colorspace_out HSV
  name Colorspace1
  xpos -78
  ypos -39
 }
 Shuffle {
  in rgb
  green white
  blue white
  out rgb
  name Shuffle1
  xpos -78
  ypos -13
 }
 Colorspace {
  colorspace_in HSV
  colorspace_out sRGB
  name Colorspace2
  xpos -78
  ypos 13
 }
 Output {
  name Output1
  xpos -78
  ypos 113
 }
end_group
Read {
 inputs 0
 file "\[value Write_JPG_1.file]"
 first {{parent.Write_JPG_1.last}}
 last {{first}}
 origset true
 version 28
 name ReadWrite_JPG_1
 label "第 \[value first] 帧\n\[\n# lockViewer\nset isLock4 \"parent.BackdropNode_Write_1.isLock4\"\nif \{(\[exists \$isLock4]) && (\[value \$isLock4]) && (\[exists Viewer1])\} \{\n    input Viewer1 3 this\n\}\n]"
 selected true
 xpos 1280
 ypos 1536
 disable {{"1-\[file exists \[eval \{value Write_JPG_1.file\}]]"}}
}
push $N368d8400
Expression {
 channel0 rgb
 expr0 (max(r,g,b)-min(r,g,b))/max(r,g,b)
 name Expression_Write_1
 label "\[\n# lockViewer\nset isLock3 \"parent.BackdropNode_Write_1.isLock3\"\nif \{(\[exists \$isLock3]) && (\[value \$isLock3]) && (\[exists Viewer1])\} \{\n    input Viewer1 2 this\n\}\n]"
 selected true
 xpos 1280
 ypos 1691
}
